{
    "cells": [
        {
            "language": "typescript",
            "source": [
                "const { display } = require(\"node-kernel\");\r\nconst import_map = {\r\n  imports: {\r\n    three: \"../../node_modules/three/build/three.module.js\",\r\n    \"three/addons/\": \"../../node_modules/three/examples/jsm/\"\r\n  },\r\n};\r\nconst js = /*js*/`\r\n    import * as THREE from 'three';\r\n    import { OrbitControls } from 'three/addons/controls/OrbitControls.js';\r\n    const scene = new THREE.Scene();\r\n    const container = document.querySelector(\"#code_cell1\");\r\n    const camera = new THREE.PerspectiveCamera( 75, container.clientWidth / container.clientHeight, 0.1, 1000 );\r\n\r\n    const renderer = new THREE.WebGLRenderer({alpha: true});\r\n\r\n    renderer.setSize( container.clientWidth, container.clientHeight );\r\n    container.appendChild( renderer.domElement );\r\n\r\n    const axesHelper = new THREE.AxesHelper(5);\r\n    scene.add(axesHelper);\r\n\r\n    const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\r\n    // 创建平面\r\n    const floor_geometry = new THREE.PlaneGeometry(1,1,64,64);\r\n    const floor = new THREE.Mesh( floor_geometry, material );\r\n    scene.add( floor );\r\n\r\n    camera.position.z = 5;\r\n\r\n\r\n    function animate() {\r\n        requestAnimationFrame(animate);\r\n        // 使用渲染器渲染相机看这个场景的内容渲染出来\r\n        renderer.render(scene, camera);\r\n    }\r\n    animate();\r\n`;\r\nconst html = /*html*/ `\r\n    <div id=\"code_cell1\" style=\"width:600px;height:600px;position:relative;\"></div>\r\n    <script async src=\"https://unpkg.com/es-module-shims@1.8.0/dist/es-module-shims.js\"></script>\r\n    <script type=\"importmap-shim\">${JSON.stringify(import_map)}</script>\r\n    <script type=\"module-shim\">${js}</script>\r\n`;\r\ndisplay.html(html);\r\n"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<style> table, th, tr { text-align: left; }</style>",
                                "    <div id=\"code_cell1\" style=\"width:600px;height:600px;position:relative;\"></div>",
                                "    <script async src=\"https://unpkg.com/es-module-shims@1.8.0/dist/es-module-shims.js\"></script>",
                                "    <script type=\"importmap-shim\">{\"imports\":{\"three\":\"../../node_modules/three/build/three.module.js\",\"three/addons/\":\"../../node_modules/three/examples/jsm/\"}}</script>",
                                "    <script type=\"module-shim\">",
                                "    import * as THREE from 'three';",
                                "    import { OrbitControls } from 'three/addons/controls/OrbitControls.js';",
                                "    const scene = new THREE.Scene();",
                                "    const container = document.querySelector(\"#code_cell1\");",
                                "    const camera = new THREE.PerspectiveCamera( 75, container.clientWidth / container.clientHeight, 0.1, 1000 );",
                                "",
                                "    const renderer = new THREE.WebGLRenderer({alpha: true});",
                                "",
                                "    renderer.setSize( container.clientWidth, container.clientHeight );",
                                "    container.appendChild( renderer.domElement );",
                                "",
                                "    const axesHelper = new THREE.AxesHelper(5);",
                                "    scene.add(axesHelper);",
                                "",
                                "    const material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );",
                                "    // 创建平面",
                                "    const floor_geometry = new THREE.PlaneGeometry(1,1,64,64);",
                                "    const floor = new THREE.Mesh( floor_geometry, material );",
                                "    scene.add( floor );",
                                "",
                                "    camera.position.z = 5;",
                                "",
                                "",
                                "    function animate() {",
                                "        requestAnimationFrame(animate);",
                                "        // 使用渲染器渲染相机看这个场景的内容渲染出来",
                                "        renderer.render(scene, camera);",
                                "    }",
                                "    animate();",
                                "</script>",
                                ""
                            ]
                        }
                    ]
                },
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "",
                                ""
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}