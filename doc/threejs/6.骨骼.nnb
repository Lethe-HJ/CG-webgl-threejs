{
    "cells": [
        {
            "language": "html",
            "source": [
                "<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <title>Title</title>\r\n  <style>\r\n    *{\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n  </style>\r\n</head>\r\n<body>\r\n    <div id=\"container111\" style=\"width:600px;height:300px;position:relative;\"></div>\r\n</body>\r\n</html>\r\n\r\n<script type=\"module\">\r\n  import * as THREE from 'https://cdn.skypack.dev/three@v0.129.0';\r\n  const container = document.querySelector(\"#container111\");\r\n\r\n  const clock = new THREE.Clock()\r\n  // 创建一个场景\r\n  const scene = new THREE.Scene();\r\n\r\n  // 创建一个相机 视点\r\n  const camera = new THREE.PerspectiveCamera(45, container.clientWidth / container.clientHeight, 1, 1000);\r\n  // 设置相机的位置\r\n  camera.position.set(100,100,0);\r\n  camera.lookAt(new THREE.Vector3(0,0,0));\r\n\r\n\r\n  // 创建一个渲染器\r\n  const renderer = new THREE.WebGLRenderer();\r\n  // 设置渲染器尺寸\r\n\r\n\r\n  renderer.setSize(container.clientWidth, container.clientHeight);\r\n  container.appendChild( renderer.domElement );\r\n\r\n  // 添加灯光\r\n  const spotLight = new THREE.SpotLight(0xffffff);\r\n  spotLight.position.set(2000,8000,4000);\r\n  scene.add(spotLight);\r\n\r\n  // 圆柱体\r\n  const geometry = new THREE.CylinderGeometry(2, 2, 40, 8, 12)\r\n\r\n  const material = new THREE.MeshPhongMaterial();\r\n\r\n  // 蒙皮 - 皮肤\r\n  const mesh = new THREE.SkinnedMesh(geometry, material)\r\n  scene.add(mesh);\r\n\r\n  // 首先，创建一个起点. 创建骨骼系统\r\n  let b1 = new THREE.Bone();\r\n  b1.position.set(0, -20, 0);\r\n\r\n  let b2 = new THREE.Bone();\r\n  b1.add(b2)\r\n  b2.position.set(0, 10, 0);\r\n\r\n  let b3 = new THREE.Bone();\r\n  b2.add(b3)\r\n  b3.position.set(0, 10, 0)\r\n\r\n  let b4 = new THREE.Bone();\r\n  b3.add(b4)\r\n  b4.position.set(0, 10, 0)\r\n\r\n  let b5 = new THREE.Bone();\r\n  b4.add(b5)\r\n  b5.position.set(0, 10, 0)\r\n\r\n  // 创建骨架\r\n  const skeleton = new THREE.Skeleton([b1, b2, b3, b4, b5])\r\n  mesh.add(b1)\r\n  mesh.bind(skeleton)\r\n\r\n  // 添加权重   设置的就是蒙皮的权重，  顶点的蒙皮索引\r\n  const index = [] // 索引\r\n  const weight = [] // 权重\r\n\r\n  const arr = geometry.attributes.position.array;\r\n  for (let i = 0; i < arr.length; i += 3) {\r\n    const y = arr[i + 1] + 20\r\n\r\n    // const index = Math.floor(y / 10);\r\n    const weightValue = (y % 10) / 10\r\n\r\n    index.push(Math.floor(y / 10), Math.floor(y / 10) + 1, 0, 0)\r\n    weight.push(1 - weightValue, weightValue, 0, 0);\r\n  }\r\n  geometry.setAttribute('skinIndex', new THREE.Uint16BufferAttribute(index, 4));\r\n  geometry.setAttribute('skinWeight', new THREE.Float32BufferAttribute(weight, 4));\r\n\r\n  let step = 0.1;\r\n  const animation = () => {\r\n    // 渲染\r\n    renderer.render(scene, camera);\r\n\r\n    // 添加边界\r\n    if (\r\n      mesh.skeleton.bones[0].rotation.x > 0.3 ||\r\n      mesh.skeleton.bones[0].rotation.x < -0.3\r\n    ) {\r\n      step = -step\r\n    }\r\n\r\n    for (let i = 0; i < mesh.skeleton.bones.length; i++) {\r\n      mesh.skeleton.bones[i].rotation.x += step * Math.PI / 180;\r\n    }\r\n\r\n    requestAnimationFrame(animation);\r\n  }\r\n  animation()\r\n</script>\r\n\r\n"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "text/html",
                            "value": [
                                "<!DOCTYPE html>\r",
                                "<html lang=\"en\">\r",
                                "<head>\r",
                                "  <meta charset=\"UTF-8\">\r",
                                "  <title>Title</title>\r",
                                "  <style>\r",
                                "    *{\r",
                                "      margin: 0;\r",
                                "      padding: 0;\r",
                                "    }\r",
                                "  </style>\r",
                                "</head>\r",
                                "<body>\r",
                                "    <div id=\"container111\" style=\"width:600px;height:300px;position:relative;\"></div>\r",
                                "</body>\r",
                                "</html>\r",
                                "\r",
                                "<script type=\"module\">\r",
                                "  import * as THREE from 'https://cdn.skypack.dev/three@v0.129.0';\r",
                                "  const container = document.querySelector(\"#container111\");\r",
                                "\r",
                                "  const clock = new THREE.Clock()\r",
                                "  // 创建一个场景\r",
                                "  const scene = new THREE.Scene();\r",
                                "\r",
                                "  // 创建一个相机 视点\r",
                                "  const camera = new THREE.PerspectiveCamera(45, container.clientWidth / container.clientHeight, 1, 1000);\r",
                                "  // 设置相机的位置\r",
                                "  camera.position.set(100,100,0);\r",
                                "  camera.lookAt(new THREE.Vector3(0,0,0));\r",
                                "\r",
                                "\r",
                                "  // 创建一个渲染器\r",
                                "  const renderer = new THREE.WebGLRenderer();\r",
                                "  // 设置渲染器尺寸\r",
                                "\r",
                                "\r",
                                "  renderer.setSize(container.clientWidth, container.clientHeight);\r",
                                "  container.appendChild( renderer.domElement );\r",
                                "\r",
                                "  // 添加灯光\r",
                                "  const spotLight = new THREE.SpotLight(0xffffff);\r",
                                "  spotLight.position.set(2000,8000,4000);\r",
                                "  scene.add(spotLight);\r",
                                "\r",
                                "  // 圆柱体\r",
                                "  const geometry = new THREE.CylinderGeometry(2, 2, 40, 8, 12)\r",
                                "\r",
                                "  const material = new THREE.MeshPhongMaterial();\r",
                                "\r",
                                "  // 蒙皮 - 皮肤\r",
                                "  const mesh = new THREE.SkinnedMesh(geometry, material)\r",
                                "  scene.add(mesh);\r",
                                "\r",
                                "  // 首先，创建一个起点. 创建骨骼系统\r",
                                "  let b1 = new THREE.Bone();\r",
                                "  b1.position.set(0, -20, 0);\r",
                                "\r",
                                "  let b2 = new THREE.Bone();\r",
                                "  b1.add(b2)\r",
                                "  b2.position.set(0, 10, 0);\r",
                                "\r",
                                "  let b3 = new THREE.Bone();\r",
                                "  b2.add(b3)\r",
                                "  b3.position.set(0, 10, 0)\r",
                                "\r",
                                "  let b4 = new THREE.Bone();\r",
                                "  b3.add(b4)\r",
                                "  b4.position.set(0, 10, 0)\r",
                                "\r",
                                "  let b5 = new THREE.Bone();\r",
                                "  b4.add(b5)\r",
                                "  b5.position.set(0, 10, 0)\r",
                                "\r",
                                "  // 创建骨架\r",
                                "  const skeleton = new THREE.Skeleton([b1, b2, b3, b4, b5])\r",
                                "  mesh.add(b1)\r",
                                "  mesh.bind(skeleton)\r",
                                "\r",
                                "  // 添加权重   设置的就是蒙皮的权重，  顶点的蒙皮索引\r",
                                "  const index = [] // 索引\r",
                                "  const weight = [] // 权重\r",
                                "\r",
                                "  const arr = geometry.attributes.position.array;\r",
                                "  for (let i = 0; i < arr.length; i += 3) {\r",
                                "    const y = arr[i + 1] + 20\r",
                                "\r",
                                "    // const index = Math.floor(y / 10);\r",
                                "    const weightValue = (y % 10) / 10\r",
                                "\r",
                                "    index.push(Math.floor(y / 10), Math.floor(y / 10) + 1, 0, 0)\r",
                                "    weight.push(1 - weightValue, weightValue, 0, 0);\r",
                                "  }\r",
                                "  geometry.setAttribute('skinIndex', new THREE.Uint16BufferAttribute(index, 4));\r",
                                "  geometry.setAttribute('skinWeight', new THREE.Float32BufferAttribute(weight, 4));\r",
                                "\r",
                                "  let step = 0.1;\r",
                                "  const animation = () => {\r",
                                "    // 渲染\r",
                                "    renderer.render(scene, camera);\r",
                                "\r",
                                "    // 添加边界\r",
                                "    if (\r",
                                "      mesh.skeleton.bones[0].rotation.x > 0.3 ||\r",
                                "      mesh.skeleton.bones[0].rotation.x < -0.3\r",
                                "    ) {\r",
                                "      step = -step\r",
                                "    }\r",
                                "\r",
                                "    for (let i = 0; i < mesh.skeleton.bones.length; i++) {\r",
                                "      mesh.skeleton.bones[i].rotation.x += step * Math.PI / 180;\r",
                                "    }\r",
                                "\r",
                                "    requestAnimationFrame(animation);\r",
                                "  }\r",
                                "  animation()\r",
                                "</script>\r",
                                "\r",
                                ""
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}